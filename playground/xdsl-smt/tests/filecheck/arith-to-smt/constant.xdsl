// RUN: xdsl-smt.py %s -p=arith_to_smt | filecheck %s
// RUN: xdsl-smt.py %s -p=arith_to_smt -t=smt | z3 -in


builtin.module() {
  func.func() ["sym_name" = "test", "function_type" = !fun<[], [!i32]>, "sym_visibility" = "private"] {
    %x : !i32 = arith.constant() ["value" = 3 : !i32]
    func.return(%x: !i32)
  }
}

// CHECK:      builtin.module() {
// CHECK-NEXT:   %0 : !fun<[], [!smt.utils.pair<!smt.bool, !smt.utils.pair<!smt.bv.bv<32>, !smt.bool>>]> = smt.define_fun() ["name" = "test"] {
// CHECK-NEXT:     %1 : !smt.bool = smt.constant_bool false
// CHECK-NEXT:     %2 : !smt.bv.bv<32> = smt.bv.constant !smt.bv.bv_val<3, 32>
// CHECK-NEXT:     %3 : !smt.bool = smt.constant_bool false
// CHECK-NEXT:     %4 : !smt.utils.pair<!smt.bv.bv<32>, !smt.bool> = smt.utils.pair(%2 : !smt.bv.bv<32>, %3 : !smt.bool)
// CHECK-NEXT:     %5 : !smt.utils.pair<!smt.bool, !smt.utils.pair<!smt.bv.bv<32>, !smt.bool>> = smt.utils.pair(%1 : !smt.bool, %4 : !smt.utils.pair<!smt.bv.bv<32>, !smt.bool>)
// CHECK-NEXT:     smt.return(%5 : !smt.utils.pair<!smt.bool, !smt.utils.pair<!smt.bv.bv<32>, !smt.bool>>)
// CHECK-NEXT:   }
// CHECK-NEXT: }
