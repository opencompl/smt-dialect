// RUN: xdsl-smt.py %s -p=commute_tv -t smt

builtin.module() {
  func.func() ["sym_name" = "test", "function_type" = !fun<[!i32, !i32], [!i32]>, "sym_visibility" = "private"] {
    ^bb0(%a: !i32, %b: !i32):
    %x : !i32 = arith.addi(%a: !i32, %b: !i32)
    func.return(%x: !i32)
  }
}


// CHECK: (declare-datatypes ((Pair 2)) ((par (X Y) ((pair (first X) (second Y))))))
// CHECK-NEXT: (define-fun tmp ((tmp_0 (Pair (_ BitVec 32) Bool)) (tmp_1 (Pair (_ BitVec 32) Bool))) (Pair Bool (Pair (_ BitVec 32) Bool))
// CHECK-NEXT:   (pair false (pair (bvadd (first tmp_0) (first tmp_1)) (or (second tmp_0) (second tmp_1)))))
// CHECK-NEXT: (define-fun tmp_2 ((tmp_3 (Pair (_ BitVec 32) Bool)) (tmp_4 (Pair (_ BitVec 32) Bool))) (Pair Bool (Pair (_ BitVec 32) Bool))
// CHECK-NEXT:   (pair false (pair (bvadd (first tmp_4) (first tmp_3)) (or (second tmp_4) (second tmp_3)))))
// CHECK-NEXT: (declare-const tmp_5 (Pair (_ BitVec 32) Bool))
// CHECK-NEXT: (declare-const tmp_6 (Pair (_ BitVec 32) Bool))
// CHECK-NEXT: (assert (not (= (tmp tmp_5 tmp_6) (tmp_2 tmp_5 tmp_6))))
// CHECK-NEXT: (check-sat)
// CHECK-NEXT: (get-model)
